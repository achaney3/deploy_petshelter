{"version":3,"sources":["components/PetList.jsx","components/NewPet.jsx","components/EditPet.jsx","components/ShowPet.jsx","App.js","reportWebVitals.js","index.js"],"names":["AuthorList","props","useState","allPets","setAllPets","deleteToggle","useEffect","axios","get","then","response","data","results","catch","err","console","log","className","map","pet","idx","name","type","to","_id","NewPet","history","useHistory","petInfo","setPetInfo","formErrors","setFormErrors","changeHandler","e","target","value","onSubmit","preventDefault","post","errors","push","htmlFor","onChange","message","description","EditPet","id","useParams","skillOne","skillTwo","skillThree","put","ShowPet","likes","setLikes","petData","setPetData","React","disable","setDisable","onClick","delete","class","disabled","App","exact","path","PetList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4c48167.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport {Link} from \"react-router-dom\";\n\n\nconst AuthorList = (props) => {\n\n    const [allPets, setAllPets] = useState([])\n    const [deleteToggle, setDeleteToggle] = useState(false)\n\n\n    useEffect(()=>{\n        axios.get('http://localhost:8000/api/pets') \n        .then((response) => setAllPets(response.data.results) )\n        .catch((err) => console.log(\"errrrrr->\", err))\n    },[deleteToggle])\n\n    const deleteAuthor = (id)=>{\n        console.log(\"deleting the pet-->\", id)\n        axios.delete(`http://localhost:8000/api/pets/${id}/delete`)\n            .then(response=>{\n                console.log(\"response after deleting->\",response)\n\n                setDeleteToggle(!deleteToggle) \n            })\n            .catch(err=>console.log(err))\n    }\n\n    return (\n        <div>\n            <div className=\"container\">\n                <br />\n                    <h2>These pets are looking for a good home</h2>\n                    <br />\n                <table className=\"table\">\n                    <thead className=\"table-info\">\n                        <tr>\n                            <th>Name</th>\n                            <th>Type</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        allPets && allPets.map((pet, idx) => {\n                            return(\n                                <tr key = {idx}>\n                                    <td>{pet.name}</td>\n                                    <td>{pet.type}</td>\n                                    <td>\n                                    <Link to = {`/pets/${pet._id}`}> Details</Link> | <Link to = {`/pets/${pet._id}/edit`}>Edit</Link>\n                                        </td>\n                                </tr>\n                            )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default AuthorList;\n\n// <button onClick= {(e)=>deleteAuthor(pet._id)} className=\"btn btn-danger\">Delete</button>","import React, { useState } from 'react';\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nconst NewPet = (props) => {\n\n    const history = useHistory()\n    const [petInfo, setPetInfo] = useState({ name: \"\" })\n    const [formErrors, setFormErrors] = useState({ name: \"\" })\n\n    const changeHandler = (e) => {\n        console.log(\"triggering changehandler\")\n        setPetInfo({\n            ...petInfo,\n            [e.target.name]: e.target.value\n        })\n    }\n    const submitHandler = (e) => {\n        e.preventDefault()\n        console.log(\"trying to submit form!\")\n        axios.post(\"http://localhost:8000/api/pets/add\", petInfo)\n            .then(response => {\n                console.log(\"post response =====>\", response);\n                if (response.data.err) { //if the form is not filled out properly and there are validation errors, collecct the validations errors and put them in a state variable using setFormErrors\n                    setFormErrors(response.data.err.errors)\n                }\n                else {\n                    setPetInfo(\"\")\n                    setFormErrors(\"\")\n                    history.push(\"/\")\n                }\n            })\n            .catch(err => console.log(\"error submitting the post request-->\", err))\n\n\n    }\n\n\n    return (\n        <div>\n            <h2>Know a Pet needing a Home?</h2>\n            <form onSubmit={submitHandler} className=\"container mt-5\">\n                <div className=\"\">\n                    <label htmlFor=\"petInfo\" className=\"col-form-label\">Pet Name:</label>\n                    <input onChange={changeHandler} type=\"text\" name=\"name\" className=\"form-control\"></input>\n                    <p className=\"text-danger\">{formErrors.name?.message}</p>\n                </div>\n                <div className=\"\">\n                    <label htmlFor=\"petInfo\" className=\"col-form-label\">Pet Type:</label>\n                    <input onChange={changeHandler} type=\"text\" name=\"type\" className=\"form-control\"></input>\n                    <p className=\"text-danger\">{formErrors.type?.message}</p>\n                </div>\n                <div className=\"\">\n                    <label htmlFor=\"petInfo\" className=\"col-form-label\">Pet Description:</label>\n                    <input onChange={changeHandler} type=\"text\" name=\"description\" className=\"form-control\"></input>\n                    <p className=\"text-danger\">{formErrors.description?.message}</p>\n                </div>\n                <div className=\"\">\n                    <label htmlFor=\"petInfo\" className=\"col-form-label\">Pet Skills:</label>\n                    <input onChange={changeHandler} type=\"text\" name=\"skillOne\" className=\"form-control\"></input>\n                    <input onChange={changeHandler} type=\"text\" name=\"skillTwo\" className=\"form-control\"></input>\n                    <input onChange={changeHandler} type=\"text\" name=\"skillThree\" className=\"form-control\"></input>\n                </div>\n                    <button className=\"btn btn-primary mt-3\" type=\"submit\" >Add Pet!</button>\n            </form>\n        </div>\n    );\n};\n\n\n\nexport default NewPet;","import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios'\n\n\nconst EditPet = (props) => {\n    const history = useHistory()\n    const { id } = useParams();\n    const [petInfo, setPetInfo] = useState({ \n        name: \"\",\n        type:\"\",\n        description:\"\",\n        skillOne:'',\n        skillTwo:'',\n        skillThree:'' \n    });\n    const [formErrors, setFormErrors] = useState({ \n    name: \"\",\n    type:\"\",\n    description:\"\",\n    skillOne:'',\n    skillTwo:'',\n    skillThree:''})\n\n    // Get the Pet to edit from db \n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then(response => {\n                console.log(\"response from getting pet to edit-->\", response)\n                setPetInfo(response.data.results)\n\n\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    const changeHandler = (e) => {\n        console.log(\"editing our pet!\")\n        setPetInfo({\n            ...petInfo,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    const submitHandler = (e) => {\n        console.log(\"submitting the form\")\n        e.preventDefault()\n        axios.put(`http://localhost:8000/api/pets/${id}`, petInfo)\n            .then(response => {\n                console.log(\"response from the put request\", response)\n                if(response.data.err)\n                {\n                    setFormErrors(response.data.err.errors)\n                }else\n                history.push(\"/\")\n            })\n            .catch(err => console.log(err))\n    }\n\n    return (\n        <div>\n            <h2>Edit {petInfo.name}</h2>\n            \n            <form onSubmit={submitHandler} className=\"container mt-5\">\n                <div className=\"\">\n                    <label htmlFor=\"petInfo\" className=\"col-form-label\">Pet Name:</label>\n                    <input onChange={changeHandler} type=\"text\" name=\"name\" className=\"form-control\" value={petInfo.name}></input>\n                    <p className=\"text-danger\">{formErrors.name?.message}</p>\n                </div>\n                <div className=\"\">\n                    <label htmlFor=\"petInfo\" className=\"col-form-label\">Pet Type:</label>\n                    <input onChange={changeHandler} type=\"text\" name=\"type\" className=\"form-control\" value={petInfo.type}></input>\n                    <p className=\"text-danger\">{formErrors.type?.message}</p>\n                </div>\n                <div className=\"\">\n                    <label htmlFor=\"petInfo\" className=\"col-form-label\">Pet Description:</label>\n                    <input onChange={changeHandler} type=\"text\" name=\"description\" className=\"form-control\" value={petInfo.description}></input>\n                    <p className=\"text-danger\">{formErrors.description?.message}</p>\n                </div>\n                <div className=\"\">\n                    <label htmlFor=\"petInfo\" className=\"col-form-label\">Pet Skills:</label>\n                    <input onChange={changeHandler} type=\"text\" name=\"skillOne\" className=\"form-control\" value={petInfo.skillOne}></input>\n                    <input onChange={changeHandler} type=\"text\" name=\"skillTwo\" className=\"form-control\" value={petInfo.skillTwo}></input>\n                    <input onChange={changeHandler} type=\"text\" name=\"skillThree\" className=\"form-control\" value={petInfo.skillThree}></input>\n                </div>\n                    <button className=\"btn btn-primary mt-3\" type=\"submit\" >Add Pet!</button>\n            </form>\n\n        </div>\n    );\n};\n\nexport default EditPet;","import React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router\";\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\n\n\nconst ShowPet = (props) => {\n   const [likes,setLikes] = useState(0);\n    const { id } = useParams();\n    const history = useHistory();\n    const [petData, setPetData] = useState({})\n    const [disable, setDisable] = React.useState(false);\n\n    useEffect(() => {\n        axios.get(`http://localhost:8000/api/pets/${id}`)\n            .then((response) => setPetData(response.data.results))\n            .catch((err) => console.log(\"error----->\", err))\n    }, [])\n\n\n    const deletePet = () => {\n        console.log(\"deleting pet that has this is-->\", id)\n        axios.delete(`http://localhost:8000/api/pets/${id}/delete`) //make an axios call to our backend route to delete pet by id. wehave this id available from the route parameter\n            .then(response => {\n                console.log(\"response after deleting->\", response)\n                history.push(\"/\") //redirect to \"/\" after deleting the pet\n\n            })\n            .catch(err => console.log(err))\n    }\n\n    const likeHandler = () => {\n        setLikes(likes +1);\n        setDisable(true)\n    }\n\n        return (\n\n            <div>\n                <h2>Details about: {petData.name}</h2>\n                <button onClick={deletePet} className=\"float-end btn-danger\">Adopt {petData.name}</button> <br /><br />\n\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <h5 class=\"card-title\">Pet Name: {petData.name}</h5>\n                        <p class=\"card-text\">\n                            <p>Pet Type: {petData.type} </p>\n                            <p>Pet Description: {petData.description}</p>\n                            <p>Skills: {petData.skillOne}</p>\n                            <p>{petData.skillTwo}</p>\n                            <p>{petData.skillThree}</p>\n                        </p>\n                        <button onClick={likeHandler} disabled={disable} class=\"btn btn-success\">Like {petData.name}</button><p> {likes} like(s)</p>\n                    </div>\n                </div>\n            </div>\n        );\n    \n};\n\n\n\nexport default ShowPet;","import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport PetList from './components/PetList';\nimport NewPet from './components/NewPet';\nimport EditPet from './components/EditPet';\nimport ShowPet from './components/ShowPet';\n\nfunction App() {\n  return (\n    <div className=\"App container\">\n      <BrowserRouter>\n        <h1>Pet Shelter</h1>\n        <Switch>\n          {/* Home */}\n          <Route exact path='/'>\n            <Link to=\"/pets/new\" className=\"float-end\">Add a Pet to the Shelter</Link>\n            <PetList />\n          </Route>\n {/* Create New Pet */}\n <Route exact path='/pets/new'>\n            <Link to=\"/\" className=\"float-end\">Go back Home</Link>\n            <br/>\n            <NewPet />\n          </Route>\n\n          {/* Show Pet Details */}\n          <Route exact path='/pets/:id'>\n            <Link to=\"/\" className=\"float-end\">Back Home</Link>\n            <ShowPet />\n          </Route>\n         \n          {/*Edit an Pet */}\n          <Route exact path='/pets/:id/edit'>\n            <Link to=\"/\" className=\"float-end\">Home</Link>\n            <br />\n            <EditPet />\n          </Route>\n\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}